generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Post {
  id             String       @id
  txid           String       @unique
  postId         String
  content        String
  author_address String
  media_type     String?
  block_height   Int?
  amount         Int?
  unlock_height  Int?
  description    String?
  created_at     DateTime     @default(now())
  tags           String[]
  metadata       Json?
  is_locked      Boolean      @default(false)
  lock_duration  Int?
  raw_image_data Bytes?
  image_format   String?
  image_source   String?
  is_vote        Boolean      @default(false)
  vote_options   VoteOption[]
  lock_likes     LockLike[]

  @@index([author_address])
  @@index([block_height])
  @@index([created_at])
  @@index([postId])
}

model VoteOption {
  id              String   @id
  txid            String   @unique
  postId          String
  post_txid       String
  content         String
  author_address  String
  created_at      DateTime
  lock_amount     Int
  lock_duration   Int
  unlock_height   Int
  current_height  Int
  lock_percentage Float
  tags            String[]
  post            Post     @relation(fields: [post_txid], references: [txid])

  @@index([postId])
  @@index([post_txid])
}

model LockLike {
  id          String   @id @default(cuid())
  txid        String   @unique
  postId      String
  amount      Int
  handle      String
  lockPeriod  Int
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  post        Post     @relation(fields: [postId], references: [id])

  @@index([postId])
  @@index([handle])
  @@index([created_at])
}
