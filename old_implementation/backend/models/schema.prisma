datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(uuid())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  address       String    @unique
  publicKey     String?
  locksCreated  Lock[]    @relation("CreatedLocks")
  locksReceived Lock[]    @relation("ReceivedLocks")
}

model Lock {
  id              String    @id @default(uuid())
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  txId            String    @unique
  creatorId       String
  recipientId     String
  amount          BigInt
  lockUntilHeight BigInt
  status          LockStatus
  unlockTxId      String?
  unlockTime      DateTime?
  metadata        Json?
  creator         User      @relation("CreatedLocks", fields: [creatorId], references: [id])
  recipient       User      @relation("ReceivedLocks", fields: [recipientId], references: [id])
  transactions    Transaction[]
}

model Transaction {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  lockId    String
  txId      String    @unique
  type      TxType
  amount    BigInt
  status    TxStatus
  metadata  Json?
  lock      Lock      @relation(fields: [lockId], references: [id])
}

enum LockStatus {
  PENDING
  CONFIRMED
  UNLOCKED
  FAILED
}

enum TxType {
  LOCK
  UNLOCK
}

enum TxStatus {
  PENDING
  CONFIRMED
  FAILED
} 